{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPost","className","SearchPanel","onUpdateSearchState","e","term","target","value","props","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","filter","map","clazz","onClick","updateSelect","PostListItem","label","onDelete","onToggleLike","onToggleImportant","like","classNames","important","PostList","posts","elements","item","id","PostAddFrom","state","text","onInputChange","setState","onSumbmitForm","preventDefault","onAdd","onSubmit","App","data","deleteItem","index","findIndex","elem","before","slice","after","addItem","body","newItem","Math","random","maxId","console","log","el","old","onUpdateSearch","items","length","indexOf","onUpdateFilter","visiblePosts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc575707.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPost}) => {\r\n\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Iluy Dulyuk</h1>\r\n            <h2>{allPost} записи, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    onUpdateSearchState = (e) => {\r\n        const term = e.target.value;\r\n        this.props.onUpdateSearchState(term);\r\n    }\r\n    \r\n    render() {\r\n\r\n        \r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearchState}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'Все', filter: 'all'},\r\n            {name: 'Понравилось',filter: 'like'}\r\n        ]\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const buttons = this.buttons.map(({name, filter}) => {\r\n\r\n            const active = this.props.filter === filter; \r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n            return (\r\n                <button onClick={() => this.props.updateSelect(filter)} key={filter} type=\"button\" className={`btn ${clazz}`}>{name}</button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"bth-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n    \r\n\r\n    render() {\r\n        const {label, onDelete, onToggleLike, onToggleImportant, like, important} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if(important) {\r\n            classNames += ' important'\r\n        }\r\n        if(like) {\r\n            classNames += ' like'\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span onClick={onToggleLike} className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-item-center\">\r\n                    <button onClick={onToggleImportant} className=\"btn-star btn-sm\" type=\"button\">\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button onClick={onDelete} className=\"btn-trash btn-sm\" type=\"button\">\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete , onToggleImportant, onToggleLike}) => {\r\n\r\n    const elements =  posts.map((item) => {\r\n        return (\r\n            <li key={item.id} className=\"list-group-item\"> \r\n                <PostListItem onDelete={() => {onDelete(item.id)}} label={item.label} important={item.important} onToggleImportant={() => onToggleImportant(item.id)} onToggleLike={() => onToggleLike(item.id)} like={item.like}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\nimport './post-add-from.css';\r\n\r\nexport default class PostAddFrom extends Component {\r\n\r\n    state = {\r\n        text: '',\r\n    }\r\n    \r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSumbmitForm = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.text === '') {\r\n            return;\r\n        } else {\r\n            this.props.onAdd(this.state.text);\r\n        }\r\n        this.setState({\r\n            text: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSumbmitForm} className=\"bottom-panel d-flex\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onInputChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddFrom from '../post-add-form/post-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        data: [\r\n            {label: 'Going to lealrn react', important: false, like: false, id: 1},\r\n            {label: 'Good day', important: false, like: false, id: 2},\r\n            {label: 'I won eaaatt!!!', important: false, like: false, id: 3}\r\n        ],\r\n        term: '',\r\n        filter: 'all',\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    addItem = (body) => {\r\n        const newItem = {\r\n            label: body,\r\n            important: false, \r\n            id: Math.random(),\r\n            like: false\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr,\r\n                maxId: this.state.maxId + 1\r\n            }\r\n        })\r\n\r\n        console.log(newItem)\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(el => el.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    \r\n    onToggleLike = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(el => el.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onUpdateSearchState = (term) => {\r\n        this.setState({term})\r\n    }\r\n\r\n    onUpdateSearch = (items, term) => {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return this.state.data.filter(item => {\r\n            return item.label.indexOf(term) > -1\r\n        })\r\n    }\r\n\r\n    onUpdateFilter = (items, filter) => {\r\n        if(filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    updateSelect = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {data} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPost = data.length;\r\n\r\n        const visiblePosts = this.onUpdateFilter(this.onUpdateSearch(this.state.data, this.state.term), this.state.filter);\r\n\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPost={allPost}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearchState={this.onUpdateSearchState}/>\r\n                    <PostStatusFilter filter={this.state.filter} updateSelect={this.updateSelect}/>\r\n                </div>\r\n                <PostList posts={visiblePosts} onDelete={this.deleteItem} onToggleImportant={this.onToggleImportant} onToggleLike={this.onToggleLike}/>\r\n                <PostAddFrom onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}